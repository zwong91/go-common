package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "dao_test",
    srcs = [
        "admin_test.go",
        "block_test.go",
        "business_test.go",
        "config_test.go",
        "dao_test.go",
        "emoji_package_test.go",
        "emoji_test.go",
        "event_test.go",
        "fold_test.go",
        "http_filter_test.go",
        "http_search_test.go",
        "http_title_test.go",
        "logReport_test.go",
        "memcache_test.go",
        "message_test.go",
        "notice_test.go",
        "redis_test.go",
        "reply_content_test.go",
        "reply_test.go",
        "report_test.go",
        "search_test.go",
        "stat_test.go",
        "subject_test.go",
        "workflow_test.go",
    ],
    embed = [":dao"],
    rundir = ".",
    tags = ["automanaged"],
    deps = [
        "//app/admin/main/reply/conf",
        "//app/admin/main/reply/model",
        "//library/conf/env",
        "//library/time",
        "//vendor/github.com/go-sql-driver/mysql",
        "//vendor/github.com/smartystreets/goconvey/convey",
    ],
)

go_library(
    name = "dao",
    srcs = [
        "admin.go",
        "block.go",
        "business.go",
        "config.go",
        "dao.go",
        "emoji.go",
        "emoji_package.go",
        "event.go",
        "fold.go",
        "http_filter.go",
        "http_search.go",
        "http_title.go",
        "logReport.go",
        "memcache.go",
        "message.go",
        "notice.go",
        "redis.go",
        "reply.go",
        "reply_content.go",
        "report.go",
        "stat.go",
        "subject.go",
        "workflow.go",
    ],
    importpath = "go-common/app/admin/main/reply/dao",
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
    deps = [
        "//app/admin/main/reply/conf",
        "//app/admin/main/reply/model",
        "//library/cache/memcache",
        "//library/cache/redis",
        "//library/database/elastic",
        "//library/database/sql",
        "//library/ecode",
        "//library/log",
        "//library/net/http/blademaster",
        "//library/queue/databus",
        "//library/sync/errgroup",
        "//library/time",
        "//library/xstr",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
