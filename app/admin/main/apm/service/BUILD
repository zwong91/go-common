package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "service_test",
    srcs = [
        "app_test.go",
        "canal_test.go",
        "dapper_test.go",
        "databus_test.go",
        "members_test.go",
        "monitor_test.go",
        "need_test.go",
        "pprof_test.go",
        "prometheus_test.go",
        "service_test.go",
        "tree_test.go",
        "upload_test.go",
        "user_test.go",
        "ut_dash_test.go",
        "ut_rank_test.go",
        "ut_report_test.go",
        "ut_test.go",
    ],
    embed = [":service"],
    rundir = ".",
    tags = ["automanaged"],
    deps = [
        "//app/admin/main/apm/conf",
        "//app/admin/main/apm/dao",
        "//app/admin/main/apm/dao/mock",
        "//app/admin/main/apm/model/canal",
        "//app/admin/main/apm/model/monitor",
        "//app/admin/main/apm/model/need",
        "//app/admin/main/apm/model/pprof",
        "//app/admin/main/apm/model/ut",
        "//library/log",
        "//vendor/github.com/BurntSushi/toml",
        "//vendor/github.com/bouk/monkey",
        "//vendor/github.com/smartystreets/goconvey/convey",
    ],
)

go_library(
    name = "service",
    srcs = [
        "alarm.go",
        "app.go",
        "canal.go",
        "dapper.go",
        "databus.go",
        "discovery.go",
        "ecode.go",
        "log.go",
        "members.go",
        "monitor.go",
        "need.go",
        "open.go",
        "platform.go",
        "pprof.go",
        "prometheus.go",
        "qywechat.go",
        "service.go",
        "task.go",
        "tree.go",
        "upload.go",
        "user.go",
        "ut.go",
        "ut_app.go",
        "ut_dash.go",
        "ut_rank.go",
        "ut_report.go",
    ],
    importpath = "go-common/app/admin/main/apm/service",
    tags = ["automanaged"],
    deps = [
        "//app/admin/main/apm/conf",
        "//app/admin/main/apm/dao",
        "//app/admin/main/apm/model/app",
        "//app/admin/main/apm/model/canal",
        "//app/admin/main/apm/model/databus",
        "//app/admin/main/apm/model/discovery",
        "//app/admin/main/apm/model/ecode",
        "//app/admin/main/apm/model/log",
        "//app/admin/main/apm/model/monitor",
        "//app/admin/main/apm/model/need",
        "//app/admin/main/apm/model/pprof",
        "//app/admin/main/apm/model/tree",
        "//app/admin/main/apm/model/user",
        "//app/admin/main/apm/model/ut",
        "//app/admin/main/config/model",
        "//app/tool/saga/service/gitlab",
        "//library/conf/env",
        "//library/ecode",
        "//library/log",
        "//library/naming",
        "//library/net/http/blademaster",
        "//library/queue/databus/report",
        "//library/sync/errgroup.v2:errgroup_v2",
        "//library/time",
        "//vendor/github.com/BurntSushi/toml",
        "//vendor/github.com/Shopify/sarama",
        "//vendor/github.com/bsm/sarama-cluster",
        "//vendor/github.com/gogo/protobuf/sortkeys",
        "//vendor/github.com/jinzhu/gorm",
        "//vendor/github.com/pkg/errors",
        "//vendor/github.com/robfig/cron",
        "//vendor/github.com/smartystreets/goconvey/web/server/contract",
        "//vendor/github.com/smartystreets/goconvey/web/server/parser",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
