package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "feed_test",
    srcs = [
        "audit_test.go",
        "banner_test.go",
        "black_test.go",
        "cache_test.go",
        "index2_test.go",
        "index_test.go",
        "infoc_test.go",
        "operate_test.go",
        "player_test.go",
        "service_test.go",
        "tab_test.go",
        "upper_test.go",
    ],
    embed = [":feed"],
    rundir = ".",
    tags = ["automanaged"],
    deps = [
        "//app/interface/main/app-card/model/card/ai",
        "//app/interface/main/app-card/model/card/live",
        "//app/interface/main/app-card/model/card/operate",
        "//app/interface/main/app-feed/conf",
        "//app/service/main/archive/model/archive",
        "//vendor/github.com/smartystreets/goconvey/convey",
    ],
)

go_library(
    name = "feed",
    srcs = [
        "audit.go",
        "banner.go",
        "black.go",
        "cache.go",
        "index.go",
        "index2.go",
        "infoc.go",
        "operate.go",
        "player.go",
        "rank.go",
        "search.go",
        "service.go",
        "tab.go",
        "tab2.go",
        "upper.go",
    ],
    importpath = "go-common/app/interface/main/app-feed/service/feed",
    tags = ["automanaged"],
    deps = [
        "//app/interface/main/app-card/model",
        "//app/interface/main/app-card/model/bplus",
        "//app/interface/main/app-card/model/card",
        "//app/interface/main/app-card/model/card/ai",
        "//app/interface/main/app-card/model/card/audio",
        "//app/interface/main/app-card/model/card/bangumi",
        "//app/interface/main/app-card/model/card/banner",
        "//app/interface/main/app-card/model/card/cm",
        "//app/interface/main/app-card/model/card/live",
        "//app/interface/main/app-card/model/card/operate",
        "//app/interface/main/app-card/model/card/rank",
        "//app/interface/main/app-card/model/card/show",
        "//app/interface/main/app-feed/conf",
        "//app/interface/main/app-feed/dao/account",
        "//app/interface/main/app-feed/dao/ad",
        "//app/interface/main/app-feed/dao/archive",
        "//app/interface/main/app-feed/dao/article",
        "//app/interface/main/app-feed/dao/audio",
        "//app/interface/main/app-feed/dao/audit",
        "//app/interface/main/app-feed/dao/bangumi",
        "//app/interface/main/app-feed/dao/black",
        "//app/interface/main/app-feed/dao/bplus",
        "//app/interface/main/app-feed/dao/card",
        "//app/interface/main/app-feed/dao/converge",
        "//app/interface/main/app-feed/dao/game",
        "//app/interface/main/app-feed/dao/live",
        "//app/interface/main/app-feed/dao/location",
        "//app/interface/main/app-feed/dao/rank",
        "//app/interface/main/app-feed/dao/recommend",
        "//app/interface/main/app-feed/dao/relation",
        "//app/interface/main/app-feed/dao/resource",
        "//app/interface/main/app-feed/dao/search",
        "//app/interface/main/app-feed/dao/show",
        "//app/interface/main/app-feed/dao/special",
        "//app/interface/main/app-feed/dao/tab",
        "//app/interface/main/app-feed/dao/tag",
        "//app/interface/main/app-feed/dao/upper",
        "//app/interface/main/app-feed/model",
        "//app/interface/main/app-feed/model/feed",
        "//app/interface/main/app-feed/model/live",
        "//app/interface/main/app-feed/model/tag",
        "//app/interface/main/tag/model",
        "//app/interface/openplatform/article/model",
        "//app/service/main/account/model",
        "//app/service/main/archive/api",
        "//app/service/main/archive/model/archive",
        "//app/service/main/feed/model",
        "//app/service/main/location/model",
        "//app/service/main/relation/model",
        "//app/service/main/resource/model",
        "//app/service/openplatform/pgc-season/api/grpc/episode/v1:episode",
        "//library/ecode",
        "//library/log",
        "//library/log/infoc",
        "//library/net/metadata",
        "//library/stat/prom",
        "//library/sync/errgroup",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
