load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "dao_test",
    srcs = [
        "account_test.go",
        "dao_test.go",
        "distrib_test.go",
        "item_test.go",
        "order_detail_test.go",
        "order_log_test.go",
        "order_test.go",
        "promotion_group_test.go",
        "promotion_order_test.go",
        "promotion_test.go",
        "stock_test.go",
        "ticket_test.go",
    ],
    embed = [":dao"],
    rundir = ".",
    tags = ["automanaged"],
    deps = [
        "//app/service/openplatform/ticket-sales/api/grpc/type",
        "//app/service/openplatform/ticket-sales/api/grpc/v1:grpc",
        "//app/service/openplatform/ticket-sales/conf",
        "//app/service/openplatform/ticket-sales/model",
        "//app/service/openplatform/ticket-sales/model/consts",
        "//library/conf/paladin",
        "//vendor/github.com/smartystreets/goconvey/convey",
    ],
)

go_library(
    name = "dao",
    srcs = [
        "account.go",
        "dao.cache.go",
        "dao.go",
        "distrib.go",
        "item.go",
        "order.go",
        "order_detail.go",
        "order_log.go",
        "promotion.go",
        "promotion_group.go",
        "promotion_order.go",
        "redis.go",
        "stock.go",
        "ticket.go",
    ],
    importpath = "go-common/app/service/openplatform/ticket-sales/dao",
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
    deps = [
        "//app/common/openplatform/encoding",
        "//app/service/main/account/api",
        "//app/service/openplatform/ticket-item/api/grpc/v1:grpc",
        "//app/service/openplatform/ticket-sales/api/grpc/type",
        "//app/service/openplatform/ticket-sales/api/grpc/v1:grpc",
        "//app/service/openplatform/ticket-sales/conf",
        "//app/service/openplatform/ticket-sales/model",
        "//app/service/openplatform/ticket-sales/model/consts",
        "//library/cache",
        "//library/cache/redis",
        "//library/database/sql",
        "//library/ecode",
        "//library/log",
        "//library/naming/discovery",
        "//library/net/http/blademaster",
        "//library/net/metadata",
        "//library/net/rpc/warden",
        "//library/net/rpc/warden/resolver",
        "//library/queue/databus",
        "//library/stat/prom",
        "//library/time",
        "//library/xstr",
        "//vendor/github.com/gogo/protobuf/types",
        "//vendor/github.com/pkg/errors",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
