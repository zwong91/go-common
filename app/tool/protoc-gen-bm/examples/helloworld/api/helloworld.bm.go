// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: helloworld.proto

/*
Package v1 is a generated blademaster stub package.
This code was generated with go-common/app/tool/bmgen/protoc-gen-bm v0.1.

It is generated from these files:
	helloworld.proto
*/
package v1

import (
	"context"

	bm "go-common/library/net/http/blademaster"
	"go-common/library/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathHelloSayHello = "/hello"
var PathHelloEcho = "/echo"

// ===============
// Hello Interface
// ===============

// The greeting service definition.
type HelloBMServer interface {
	// Sends a greeting
	SayHello(ctx context.Context, req *HelloRequest) (resp *HelloReply, err error)

	Echo(ctx context.Context, req *EchoRequest) (resp *EchoReply, err error)
}

var v1HelloSvc HelloBMServer

func helloSayHello(c *bm.Context) {
	p := new(HelloRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := v1HelloSvc.SayHello(c, p)
	c.JSON(resp, err)
}

func helloEcho(c *bm.Context) {
	p := new(EchoRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := v1HelloSvc.Echo(c, p)
	c.JSON(resp, err)
}

// RegisterV1HelloService Register the blademaster route with middleware map
// midMap is the middleware map, the key is defined in proto
func RegisterV1HelloService(e *bm.Engine, svc HelloBMServer, midMap map[string]bm.HandlerFunc) {
	v1HelloSvc = svc
	e.GET("/hello", helloSayHello)
	e.POST("/echo", helloEcho)
}

// RegisterHelloBMServer Register the blademaster route
func RegisterHelloBMServer(e *bm.Engine, server HelloBMServer) {
	v1HelloSvc = server
	e.GET("/hello", helloSayHello)
	e.POST("/echo", helloEcho)
}
